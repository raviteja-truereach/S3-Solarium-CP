require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '14.0'
prepare_react_native_project!

flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled   

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'cpapp' do
  config = use_native_modules!

  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'cpappTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        
        # ================================
        # BASIC OPTIMIZATION SETTINGS
        # ================================
        
        # Enable dead code stripping for release builds
        if config.name == 'Release'
          config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
          config.build_settings['STRIP_INSTALLED_PRODUCT'] = 'YES'
          config.build_settings['COPY_PHASE_STRIP'] = 'YES'
          config.build_settings['STRIP_STYLE'] = 'all'
        end
        
        # Optimization level for all configurations
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = config.name == 'Release' ? 's' : '0'
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = config.name == 'Release' ? '-Osize' : '-Onone'
        
        # Debug information format
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = config.name == 'Release' ? 'dwarf-with-dsym' : 'dwarf'
        
        # Architecture settings
        config.build_settings['ONLY_ACTIVE_ARCH'] = config.name == 'Release' ? 'NO' : 'YES'
        
        # ================================
        # POD-SPECIFIC OPTIMIZATIONS
        # ================================
        
        if target.name == 'react-native-performance'
          # Exclude only arm64 for react-native-performance pod on iOS simulator
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        elsif target.name == 'hermes-engine'
          if config.name == 'Release'
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'HERMES_ENABLE_DEBUGGER=0'
            config.build_settings['HERMES_ENABLE_DEBUGGER'] = 'NO'
            # Additional Hermes optimizations
            config.build_settings['HERMES_RELEASE_VERSION'] = 'YES'
            config.build_settings['HERMES_USE_STATIC_FRAMEWORK'] = 'YES'
          end
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        elsif target.name.include?('React')
          # React-specific optimizations for release
          if config.name == 'Release'
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'NDEBUG=1'
            # Disable React Native debug features in release
            config.build_settings['REACT_NATIVE_DEBUG'] = 'NO'
          end
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        else
          # General optimizations for all other pods
          if config.name == 'Release'
            config.build_settings['ENABLE_NS_ASSERTIONS'] = 'NO'
            config.build_settings['VALIDATE_PRODUCT'] = 'YES'
          end
          # Exclude arm64 for all other pods on iOS simulator (for Apple Silicon Macs)
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        end
        
        # ================================
        # DEPLOYMENT AND COMPATIBILITY
        # ================================
        
        # Ensure consistent deployment target
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
        
        # Modern build settings for Xcode 16.2
        config.build_settings['CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED'] = 'YES'
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        
        # Security and modern practices
        if config.name == 'Release'
          config.build_settings['ENABLE_HARDENED_RUNTIME'] = 'NO' # iOS doesn't use hardened runtime
          config.build_settings['GCC_GENERATE_DEBUGGING_SYMBOLS'] = 'YES' # Needed for dSYM
        end
      end
    end

    # ================================
    # REACT NATIVE POST INSTALL
    # ================================
    
    react_native_post_install(
      installer,
      mac_catalyst_enabled: false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end