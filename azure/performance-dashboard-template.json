{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "applicationInsightsName": {
        "type": "string",
        "metadata": {
          "description": "Name of the Application Insights resource"
        }
      },
      "dashboardName": {
        "type": "string",
        "defaultValue": "Solarium-CP-App-Performance-Dashboard",
        "metadata": {
          "description": "Name of the dashboard"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources"
        }
      }
    },
    "variables": {
      "applicationInsightsResourceId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Portal/dashboards",
        "apiVersion": "2020-09-01-preview",
        "name": "[parameters('dashboardName')]",
        "location": "[parameters('location')]",
        "properties": {
          "lenses": [
            {
              "order": 0,
              "parts": [
                {
                  "position": {
                    "x": 0,
                    "y": 0,
                    "colSpan": 6,
                    "rowSpan": 4
                  },
                  "metadata": {
                    "inputs": [
                      {
                        "name": "resourceTypeMode",
                        "isOptional": true
                      },
                      {
                        "name": "ComponentId",
                        "value": "[variables('applicationInsightsResourceId')]"
                      },
                      {
                        "name": "Scope",
                        "value": {
                          "resourceIds": [
                            "[variables('applicationInsightsResourceId')]"
                          ]
                        }
                      },
                      {
                        "name": "PartId",
                        "value": "cold-start-performance"
                      },
                      {
                        "name": "Version",
                        "value": "2.0"
                      },
                      {
                        "name": "TimeRange",
                        "value": "P7D"
                      },
                      {
                        "name": "Query",
                        "value": "customEvents\n| where name == \"AppStart\"\n| extend startupDuration = toreal(customDimensions.startupDuration)\n| extend deviceTier = tostring(customDimensions.deviceTier)\n| extend platform = tostring(customDimensions.platform)\n| where isnotempty(startupDuration)\n| summarize \n    avg_duration = avg(startupDuration),\n    p95_duration = percentile(startupDuration, 95),\n    p99_duration = percentile(startupDuration, 99),\n    count = count()\n    by deviceTier, platform, bin(timestamp, 1h)\n| order by timestamp desc"
                      }
                    ],
                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                    "settings": {
                      "content": {
                        "PartTitle": "Cold Start Performance by Device Tier",
                        "PartSubTitle": "Average and P95 startup times"
                      }
                    }
                  }
                },
                {
                  "position": {
                    "x": 6,
                    "y": 0,
                    "colSpan": 6,
                    "rowSpan": 4
                  },
                  "metadata": {
                    "inputs": [
                      {
                        "name": "ComponentId",
                        "value": "[variables('applicationInsightsResourceId')]"
                      },
                      {
                        "name": "Query",
                        "value": "customEvents\n| where name == \"UserInteraction\" and customDimensions.action == \"navigation\"\n| extend duration = toreal(customDimensions.duration)\n| extend fromScreen = tostring(customDimensions.fromScreen)\n| extend toScreen = tostring(customDimensions.toScreen)\n| extend deviceTier = tostring(customDimensions.deviceTier)\n| where isnotempty(duration)\n| summarize \n    avg_duration = avg(duration),\n    p95_duration = percentile(duration, 95),\n    count = count()\n    by deviceTier, bin(timestamp, 1h)\n| order by timestamp desc"
                      }
                    ],
                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                    "settings": {
                      "content": {
                        "PartTitle": "Navigation Performance",
                        "PartSubTitle": "Screen transition times by device tier"
                      }
                    }
                  }
                },
                {
                  "position": {
                    "x": 0,
                    "y": 4,
                    "colSpan": 6,
                    "rowSpan": 4
                  },
                  "metadata": {
                    "inputs": [
                      {
                        "name": "ComponentId",
                        "value": "[variables('applicationInsightsResourceId')]"
                      },
                      {
                        "name": "Query",
                        "value": "customEvents\n| where name == \"Memory\"\n| extend usedMemory = toreal(customDimensions.usedMemory)\n| extend totalMemory = toreal(customDimensions.totalMemory)\n| extend memoryPressure = tostring(customDimensions.memoryPressure)\n| extend deviceTier = tostring(customDimensions.deviceTier)\n| extend platform = tostring(customDimensions.platform)\n| where isnotempty(usedMemory)\n| summarize \n    avg_memory = avg(usedMemory),\n    peak_memory = max(usedMemory),\n    memory_pressure_high = countif(memoryPressure == \"high\" or memoryPressure == \"critical\")\n    by deviceTier, platform, bin(timestamp, 1h)\n| extend avg_memory_mb = avg_memory / 1024 / 1024\n| extend peak_memory_mb = peak_memory / 1024 / 1024\n| order by timestamp desc"
                      }
                    ],
                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                    "settings": {
                      "content": {
                        "PartTitle": "Memory Usage by Device Tier",
                        "PartSubTitle": "Average and peak memory consumption"
                      }
                    }
                  }
                },
                {
                  "position": {
                    "x": 6,
                    "y": 4,
                    "colSpan": 6,
                    "rowSpan": 4
                  },
                  "metadata": {
                    "inputs": [
                      {
                        "name": "ComponentId",
                        "value": "[variables('applicationInsightsResourceId')]"
                      },
                      {
                        "name": "Query",
                        "value": "customEvents\n| where name == \"budget_violation\"\n| extend metricType = tostring(customDimensions.metricType)\n| extend actualValue = toreal(customDimensions.actualValue)\n| extend budgetValue = toreal(customDimensions.budgetValue)\n| extend severity = tostring(customDimensions.severity)\n| extend deviceTier = tostring(customDimensions.deviceTier)\n| summarize \n    violations = count(),\n    critical_violations = countif(severity == \"error\"),\n    warning_violations = countif(severity == \"warning\")\n    by metricType, deviceTier, bin(timestamp, 1h)\n| order by timestamp desc"
                      }
                    ],
                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                    "settings": {
                      "content": {
                        "PartTitle": "Performance Budget Violations",
                        "PartSubTitle": "Critical and warning violations by metric type"
                      }
                    }
                  }
                },
                {
                  "position": {
                    "x": 0,
                    "y": 8,
                    "colSpan": 4,
                    "rowSpan": 3
                  },
                  "metadata": {
                    "inputs": [
                      {
                        "name": "ComponentId",
                        "value": "[variables('applicationInsightsResourceId')]"
                      },
                      {
                        "name": "Query",
                        "value": "customEvents\n| where name == \"AppStart\"\n| extend deviceTier = tostring(customDimensions.deviceTier)\n| extend platform = tostring(customDimensions.platform)\n| summarize sessions = dcount(session_Id) by deviceTier, platform\n| order by sessions desc"
                      }
                    ],
                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                    "settings": {
                      "content": {
                        "PartTitle": "Device Tier Distribution",
                        "PartSubTitle": "Session count by device tier"
                      }
                    }
                  }
                },
                {
                  "position": {
                    "x": 4,
                    "y": 8,
                    "colSpan": 4,
                    "rowSpan": 3
                  },
                  "metadata": {
                    "inputs": [
                      {
                        "name": "ComponentId",
                        "value": "[variables('applicationInsightsResourceId')]"
                      },
                      {
                        "name": "Query",
                        "value": "customEvents\n| where name == \"Performance\"\n| extend overhead = toreal(customDimensions.overhead)\n| where isnotempty(overhead)\n| summarize \n    avg_overhead = avg(overhead),\n    max_overhead = max(overhead),\n    samples = count()\n    by bin(timestamp, 1h)\n| extend overhead_percentage = avg_overhead * 100\n| order by timestamp desc"
                      }
                    ],
                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                    "settings": {
                      "content": {
                        "PartTitle": "Instrumentation Overhead",
                        "PartSubTitle": "Performance monitoring overhead percentage"
                      }
                    }
                  }
                },
                {
                  "position": {
                    "x": 8,
                    "y": 8,
                    "colSpan": 4,
                    "rowSpan": 3
                  },
                  "metadata": {
                    "inputs": [
                      {
                        "name": "ComponentId",
                        "value": "[variables('applicationInsightsResourceId')]"
                      },
                      {
                        "name": "Query",
                        "value": "customEvents\n| where name in (\"AppStart\", \"UserInteraction\", \"Memory\", \"Performance\")\n| extend platform = tostring(customDimensions.platform)\n| summarize events = count() by platform, bin(timestamp, 1h)\n| order by timestamp desc"
                      }
                    ],
                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                    "settings": {
                      "content": {
                        "PartTitle": "Event Volume by Platform",
                        "PartSubTitle": "Performance events received per hour"
                      }
                    }
                  }
                }
              ]
            }
          ],
          "metadata": {
            "model": {
              "timeRange": {
                "value": {
                  "relative": {
                    "duration": 168,
                    "timeUnit": 1
                  }
                },
                "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
              }
            }
          }
        }
      }
    ],
    "outputs": {
      "dashboardResourceId": {
        "type": "string",
        "value": "[resourceId('Microsoft.Portal/dashboards', parameters('dashboardName'))]"
      }
    }
  }